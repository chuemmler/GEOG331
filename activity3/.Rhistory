plot(datW$DD, datW$wind.speed2, pch=19, type="b", xlab = "Day of Year",
ylab="Wind Speed")
#install packages
#install.packages("lubridate")
library(lubridate)
#install.packages("tidyverse")
library(tidyverse)
#create a function. The names of the arguements for your function will be in parentheses. Everything in curly brackets will be run each time the function is run.
assert <- function(statement,err.message){
#if evaluates if a statement is true or false for a single item
if(statement == FALSE){
print(err.message)
}
}
#check how the statement works
#evaluate a false statement
assert(1 == 2, "error: unequal values")
#evaluate a true statement
assert(2 == 2, "error: unequal values")
#set up assert to check if two vectors are the same length
a <- c(1,2,3,4)
b <- c(8,4,5)
assert(length(a) == length(b), "error: unequal length")
#read in the data file
#skip the first 3 rows since there is additional column info
#specify the the NA is designated differently
datW <- read.csv("y:\\Students\\hkropp\\a03\\bewkes_weather.csv",
na.strings=c("#N/A"), skip=3, header=FALSE)
#preview data
print(datW[1,])
sensorInfo <-   read.csv("y:\\Students\\hkropp\\a03\\bewkes_weather.csv",
na.strings=c("#N/A"), nrows=2)
print(sensorInfo)
#get column names from sensorInfo table
# and set weather station colnames  to be the same
colnames(datW) <-   colnames(sensorInfo)
#preview data
print(datW[1,])
#convert to standardized format
#date format is m/d/y
dates <- mdy_hm(datW$timestamp, tz= "America/New_York")
#calculate day of year
datW$doy <- yday(dates)
#calculate hour in the day
datW$hour <- hour(dates) + (minute(dates)/60)
#calculate decimal day of year
datW$DD <- datW$doy + (datW$hour/24)
#quick preview of new date calcualtions
datW[1,]
#see how many values have missing data for each sensor observation
#air temperature
length(which(is.na(datW$air.temperature)))
length(which(is.na(datW$air.tempQ1)))
#wind speed
length(which(is.na(datW$wind.speed)))
#precipitation
length(which(is.na(datW$precipitation)))
#soil temperature
length(which(is.na(datW$soil.moisture)))
#soil moisture
length(which(is.na(datW$soil.temp)))
#make a plot with filled in points (using pch)
#line lines
plot(datW$DD, datW$soil.moisture, pch=19, type="b", xlab = "Day of Year",
ylab="Soil moisture (cm3 water per cm3 soil)")
#make a plot with filled in points (using pch)
#line lines
plot(datW$DD, datW$air.temperature, pch=19, type="b", xlab = "Day of Year",
ylab="Air temperature (degrees C)")
#I'm going to make a new column to work with that indicates that I am conducting QAQC
#because overwriting values should be done cautiously and can lead to confusing issues.
#It can be particularily confusing when you are just learning R.
#Here I'm using the ifelse function
#the first argument is a logical statement to be evaluated as true or false on a vector
#the second argument is the value that my air.tempQ1 column will be given if the statement
#is true. The last value is the value that will be given to air.tempQ1 if the statement is false.
#In this case it is just given the air temperature value
datW$air.tempQ1 <- ifelse(datW$air.temperature < 0, NA, datW$air.temperature)
#check the values at the extreme range of the data
#and throughout the percentiles
quantile(datW$air.tempQ1)
#look at days with really low air temperature
datW[datW$air.tempQ1 < 8,]
#look at days with really high air temperature
datW[datW$air.tempQ1 > 33,]
#plot precipitation and lightning strikes on the same plot
#normalize lighting strikes to match precipitation
lightscale <- (max(datW$precipitation)/max(datW$lightning.acvitivy)) * datW$lightning.acvitivy
#make the plot with precipitation and lightning activity marked
#make it empty to start and add in features
plot(datW$DD , datW$precipitation, xlab = "Day of Year", ylab = "Precipitation & lightning",
type="n")
#plot precipitation points only when there is precipitation
#make the points semi-transparent
points(datW$DD[datW$precipitation > 0], datW$precipitation[datW$precipitation > 0],
col= rgb(95/255,158/255,160/255,.5), pch=15)
#plot lightning points only when there is lightning
points(datW$DD[lightscale > 0], lightscale[lightscale > 0],
col= "tomato3", pch=19)
assert(length(lightscale) == nrow(datW),err.message = "Bad")
#filter out storms in wind and air temperature measurements
# filter all values with lightning that coincides with rainfall greater than 2mm or only rainfall over 5 mm.
#create a new air temp column
datW$air.tempQ2 <- ifelse(datW$precipitation  >= 2 & datW$lightning.acvitivy >0, NA,
ifelse(datW$precipitation > 5, NA, datW$air.tempQ1))
datW$wind.speed2 <- ifelse(datW$precipitation  >= 2 & datW$lightning.acvitivy >0, NA,
ifelse(datW$precipitation > 5, NA, datW$wind.speed))
for(i in 1:nrow(datW)){
assert(is.na(datW$wind.speed2[i]), "Not the Same")
}
plot(datW$DD, datW$wind.speed2, pch=19, type="b", xlab = "Day of Year",
ylab="Wind Speed")
#investigating the errors in soil moisture and temp
plot(datW$DD[datW$DD > ], datW$wind.speed2, pch=19, type="b", xlab = "Day of Year",
ylab="Wind Speed")
#investigating the errors in soil moisture and temp
plot(datW$DD[datW$DD > 65], datW$wind.speed2, pch=19, type="b", xlab = "Day of Year",
ylab="Wind Speed")
#investigating the errors in soil moisture and temp
plot(datW$DD[datW$DD > 65], datW$soil.moisture, pch=19, type="b", xlab = "Day of Year",
ylab="Wind Speed")
#investigating the errors in soil moisture and temp
plot(datW$DD[datW$DD > 120], datW$soil.moisture, pch=19, type="b", xlab = "Day of Year",
ylab="Wind Speed")
#investigating the errors in soil moisture and temp
plot(datW$DD[datW$DD > 175], datW$soil.moisture, pch=19, type="b", xlab = "Day of Year",
ylab="Wind Speed")
#investigating the errors in soil moisture and temp
plot(datW$DD[datW$DD > 175], datW$soil.moisture[datW$DD > 175], pch=19, type="b", xlab = "Day of Year",
ylab="Wind Speed")
#investigating the errors in soil moisture and temp
plot(datW$DD[datW$DD > 182], datW$soil.moisture[datW$DD > 182], pch=19, type="b", xlab = "Day of Year",
ylab="Wind Speed")
#investigating the errors in soil moisture and temp
plot(datW$DD[datW$DD > 182 && datW$DD < 195], datW$soil.moisture[datW$DD > 182 && datW$DD < 195], pch=19, type="b", xlab = "Day of Year",
ylab="Wind Speed")
#investigating the errors in soil moisture and temp
plot(datW$DD[datW$DD > 182 & datW$DD < 195], datW$soil.moisture[datW$DD > 182 & datW$DD < 195], pch=19, type="b", xlab = "Day of Year",
ylab="Wind Speed")
plot(datW$DD[datW$DD > 182 & datW$DD < 195], datW$soil.temp[datW$DD > 182 & datW$DD < 195], pch=19, type="b", xlab = "Day of Year",
ylab="Wind Speed")
plot(datW$DD, datW$soil.temp, pch=19, type="b", xlab = "Day of Year",
ylab="Wind Speed")
ggplot(data = datW, aes(x = DD))+
geom_point(aes(y = soil.moisture))
ggplot(data = datW, aes(x = DD))+
geom_point(aes(y = soil.moisture))+
geom_point(aes(y = soil.temp))
plot(datW$DD, datW$soil.temp, pch=19, type="b", xlab = "Day of Year",
ylab="Wind Speed")
plot(datW$DD, datW$precipitation, pch=19, type="b", xlab = "Day of Year",
ylab="Wind Speed")
plot(datW$DD, datW$air.temperature, pch=19, type="b", xlab = "Day of Year",
ylab="Wind Speed")
#investigating the errors in soil moisture and temp
plot(datW$DD[datW$DD > 182 & datW$DD < 195], datW$soil.moisture[datW$DD > 182 & datW$DD < 195], pch=19, type="b", xlab = "Day of Year",
ylab="Wind Speed")
plot(datW$DD[datW$DD > 182 & datW$DD < 195], datW$soil.temp[datW$DD > 182 & datW$DD < 195], pch=19, type="b", xlab = "Day of Year",
ylab="Wind Speed")
plot(datW$DD[datW$DD > 182 & datW$DD < 195], datW$air.temperature[datW$DD > 182 & datW$DD < 195], pch=19, type="b", xlab = "Day of Year",
ylab="Wind Speed")
plot(datW$DD[datW$DD > 182 & datW$DD < 195], datW$precipitation[datW$DD > 182 & datW$DD < 195], pch=19, type="b", xlab = "Day of Year",
ylab="Wind Speed")
plot(datW$DD[datW$DD > 182 & datW$DD < 195], datW$soil.temp[datW$DD > 182 & datW$DD < 195], pch=19, type="b", xlab = "Day of Year",
ylab="Wind Speed")
abline(v=193, col="blue")
par(mfrow=c(2,2))
plot(datW$DD[datW$DD > 182 & datW$DD < 195], datW$soil.moisture[datW$DD > 182 & datW$DD < 195], pch=19, type="b", xlab = "Day of Year",
ylab="Wind Speed")
abline(v=	192.8750, col="red")
plot(datW$DD[datW$DD > 182 & datW$DD < 195], datW$soil.temp[datW$DD > 182 & datW$DD < 195], pch=19, type="b", xlab = "Day of Year",
ylab="Wind Speed")
abline(v=	192.8750, col="red")
plot(datW$DD[datW$DD > 182 & datW$DD < 195], datW$air.temperature[datW$DD > 182 & datW$DD < 195], pch=19, type="b", xlab = "Day of Year",
ylab="Wind Speed")
abline(v=	192.8750, col="red")
plot(datW$DD[datW$DD > 182 & datW$DD < 195], datW$precipitation[datW$DD > 182 & datW$DD < 195], pch=19, type="b", xlab = "Day of Year",
ylab="Wind Speed")
abline(v=	192.8750, col="red")
par(mfrow=c(2,2))
plot(datW$DD[datW$DD > 182 & datW$DD < 195], datW$soil.moisture[datW$DD > 182 & datW$DD < 195], pch=19, type="b", xlab = "Day of Year",
ylab="Soil Moisture")
abline(v=	192.8750, col="red")
plot(datW$DD[datW$DD > 182 & datW$DD < 195], datW$soil.temp[datW$DD > 182 & datW$DD < 195], pch=19, type="b", xlab = "Day of Year",
ylab="Soil Temperature")
abline(v=	192.8750, col="red")
plot(datW$DD[datW$DD > 182 & datW$DD < 195], datW$air.temperature[datW$DD > 182 & datW$DD < 195], pch=19, type="b", xlab = "Day of Year",
ylab="Air Temperature")
abline(v=	192.8750, col="red")
plot(datW$DD[datW$DD > 182 & datW$DD < 195], datW$precipitation[datW$DD > 182 & datW$DD < 195], pch=19, type="b", xlab = "Day of Year",
ylab="Precipitation")
abline(v=	192.8750, col="red")
#question 8
sum(datW$precipitation)
mean(datW$air.temperature)
mean(datW$air.temperature, datW$wind.speed, datW$soil.moisture, datW$soil.temp)
mean(c(datW$air.temperature, datW$wind.speed, datW$soil.moisture, datW$soil.temp))
#question 8
sum(datW$precipitation)
mean(datW$air.temperature)
mean(datW$wind.speed)
mean(datW$soil.moisture)
mean(datW$soil.temp)
mean(rm.na(datW$soil.moisture))
mean(na.rm(datW$soil.moisture))
mean(na.omit(datW$soil.moisture))
mean(na.omit(datW$soil.temp))
mean(datW$air.temperature)
summarize(datW$air.temperature)
par(mfrow=c(2,2))
plot(datW$DD, datW$soil.moisture, pch=19, type="b", xlab = "Day of Year",
ylab="Soil Moisture")
abline(v=	192.8750, col="red")
plot(datW$DD, datW$soil.temp, pch=19, type="b", xlab = "Day of Year",
ylab="Soil Temperature")
abline(v=	192.8750, col="red")
plot(datW$DD, datW$air.temperature, pch=19, type="b", xlab = "Day of Year",
ylab="Air Temperature")
abline(v=	192.8750, col="red")
plot(datW$DD, datW$precipitation, pch=19, type="b", xlab = "Day of Year",
ylab="Precipitation")
abline(v=	192.8750, col="red")
plot(datW$DD, datW$air.temperature, pch=19, type="b", xlab = "Day of Year",
ylab="Air Temperature")
plot(datW$DD, datW$precipitation, pch=19, type="b", xlab = "Day of Year",
ylab="Precipitation")
plot(datW$DD, datW$soil.moisture, pch=19, type="b", xlab = "Day of Year",
ylab="Soil Moisture")
plot(datW$DD, datW$soil.temp, pch=19, type="b", xlab = "Day of Year",
ylab="Soil Temperature")
#question 8
tabledf <- c(sum(datW$precipitation),
mean(datW$air.temperature),
mean(datW$wind.speed),
mean(na.omit(datW$soil.moisture)),
mean(na.omit(datW$soil.temp)))
#question 8
tabledf <- data.frame(c(sum(datW$precipitation),
mean(datW$air.temperature),
mean(datW$wind.speed),
mean(na.omit(datW$soil.moisture)),
mean(na.omit(datW$soil.temp))))
colnames(tabledf) <- c("Total Precipitation", "Mean Air Temp", "Mean Wind Speed","Mean Soil Moisture","Mean Soil Temp")
View(tabledf)
#question 8
tabledf <- data.frame(c(sum(datW$precipitation),
mean(datW$air.temperature),
mean(datW$wind.speed),
mean(na.omit(datW$soil.moisture)),
mean(na.omit(datW$soil.temp))))
#question 8
tabledf <- t(data.frame(c(sum(datW$precipitation),
mean(datW$air.temperature),
mean(datW$wind.speed),
mean(na.omit(datW$soil.moisture)),
mean(na.omit(datW$soil.temp)))))
View(tabledf)
colnames(tabledf) <- c("Total Precipitation", "Mean Air Temp", "Mean Wind Speed","Mean Soil Moisture","Mean Soil Temp")
#question 8
tabledf <- (data.frame(t(c(sum(datW$precipitation),
#question 8
tabledf <- (data.frame(t(c(sum(datW$precipitation),
mean(datW$air.temperature),
mean(datW$wind.speed),
mean(na.omit(datW$soil.moisture)),
mean(na.omit(datW$soil.temp))))))
View(tabledf)
#question 8
tabledf <- data.frame(c(sum(datW$precipitation),
mean(datW$air.temperature),
mean(datW$wind.speed),
mean(na.omit(datW$soil.moisture)),
mean(na.omit(datW$soil.temp))))
mean(na.omit(datW$soil.temp)))
#question 8
tabledf <- data.frame(sum(datW$precipitation),
mean(datW$air.temperature),
mean(datW$wind.speed),
mean(na.omit(datW$soil.moisture)),
mean(na.omit(datW$soil.temp)))
View(tabledf)
colnames(tabledf) <- c("Total Precipitation", "Mean Air Temp", "Mean Wind Speed","Mean Soil Moisture","Mean Soil Temp")
nrow(datW)
2118 - 1411
tabledf <- rbind(tabledf, c(2118, 2118, 2118, 1411, 1411))
sensorInfo <-   read.csv("y:\\Students\\hkropp\\a03\\bewkes_weather.csv",
na.strings=c("#N/A"), nrows=2)
View(sensorInfo)
tabledf <- rbind(tabledf, c("mm", "C", "2118","m.s", "meters cubed per meter cubed", "C"))
View(tabledf)
install.packages("data.table")
install.packages("dplyr")
install.packages("dplyr")
install.packages("formattable")
install.packages("tidyr")
library(data.table)
library(dplyr)
library(formattable)
library(tidyr)
formattable(tabledf)
rownames(tabledf) <- c("Measure", "Number of Observations","Unit")
formattable(tabledf)
#question 8
tabledf <- data.frame(round(sum(datW$precipitation),digits = 2),
mean(datW$air.temperature),
mean(datW$wind.speed),
mean(na.omit(datW$soil.moisture)),
mean(na.omit(datW$soil.temp)))
#question 8
tabledf <- data.frame(round(sum(datW$precipitation),digits = 2),
round(mean(datW$air.temperature),2),
mean(datW$wind.speed),
mean(na.omit(datW$soil.moisture)),
mean(na.omit(datW$soil.temp)))
#question 8
tabledf <- data.frame(round(sum(datW$precipitation),digits = 2),
round(mean(datW$air.temperature),2),
mean(datW$wind.speed),
mean(na.omit(datW$soil.moisture)),
mean(na.omit(datW$soil.temp)))
round(x = .1234134)
round(x = .1234134, 2)
round(sum(datW$precipitation),digits = 2
round(sum(datW$precipitation),digits = 2)
round(sum(datW$precipitation),digits = 2)
round(sum(datW$precipitation),digits = 2)
round(mean(datW$air.temperature)),2)
round(mean(datW$air.temperature),2)
round(mean(datW$wind.speed)),2)
round(mean(datW$wind.speed),2)
#question 8
tabledf <- data.frame(round(sum(datW$precipitation),digits = 2),
round(mean(datW$air.temperature),2),
round(mean(datW$wind.speed),2),
round(mean(na.omit(datW$soil.moisture)),2),
round(mean(na.omit(datW$soil.temp)),2))
#question 8
tabledf <- c()
tabledf <- data.frame(round(sum(datW$precipitation),digits = 2),
round(mean(datW$air.temperature),2),
round(mean(datW$wind.speed),2),
round(mean(na.omit(datW$soil.moisture)),2),
round(mean(na.omit(datW$soil.temp)),2))
#question 8
tabledf <- c()
#question 8
tabledf <- data.frame()
View(tabledf)
tabledf <- data.frame(round(sum(datW$precipitation),digits = 2),
round(mean(datW$air.temperature),2),
round(mean(datW$wind.speed),2),
round(mean(na.omit(datW$soil.moisture)),2),
round(mean(na.omit(datW$soil.temp)),2))
View(tabledf)
colnames(tabledf) <- c("Total Precipitation", "Mean Air Temp", "Mean Wind Speed","Mean Soil Moisture","Mean Soil Temp")
tabledf <- rbind(tabledf, c(2118, 2118, 2118, 1411, 1411))
tabledf <- rbind(tabledf, c("mm", "C", "2118","m.s", "meters cubed per meter cubed", "C"))
rownames(tabledf) <- c("Measure", "Number of Observations","Unit")
formattable(tabledf)
tabledf <- rbind(tabledf, c("6/12/2018 - 7/26/2018", "6/12/2018 - 7/26/2018", "6/12/2018 - 7/26/2018","6/12/2018 - 7/11/2018", "6/12/2018 - 7/11/2018"))
rownames(tabledf) <- c("Measure", "Number of Observations","Unit", "Data collected from")
formattable(tabledf)
#question 8
tabledf <- data.frame()
tabledf <- data.frame(round(sum(datW$precipitation),digits = 3),
round(mean(datW$air.temperature),1),
round(mean(datW$wind.speed),1),
round(mean(na.omit(datW$soil.moisture)),2),
round(mean(na.omit(datW$soil.temp)),0))
colnames(tabledf) <- c("Total Precipitation", "Mean Air Temp", "Mean Wind Speed","Mean Soil Moisture","Mean Soil Temp")
tabledf <- rbind(tabledf, c(2118, 2118, 2118, 1411, 1411))
tabledf <- rbind(tabledf, c("mm", "C", "2118","m.s", "meters cubed per meter cubed", "C"))
tabledf <- rbind(tabledf, c("6/12/2018 - 7/26/2018", "6/12/2018 - 7/26/2018", "6/12/2018 - 7/26/2018","6/12/2018 - 7/11/2018", "6/12/2018 - 7/11/2018"))
rownames(tabledf) <- c("Measure", "Number of Observations","Unit", "Data collected from")
formattable(tabledf)
