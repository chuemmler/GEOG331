geom_bar(aes(y = x, color = "Average Temp", position = "dodge"), stat = "identity")+
geom_bar(aes(y = y, color = "Average Precipitation", position = "dodge"), stat = "identity")+
scale_y_continuous(sec.axis = sec_axis(~.*5, name = "Relative humidity [%]"))
ggplot(data = d1, aes(x = Group.1))+
geom_bar(aes(y = x, color = "Average Temp"), position = "dodge", stat = "identity")+
geom_bar(aes(y = y, color = "Average Precipitation"), position = "dodge", stat = "identity")+
scale_y_continuous(sec.axis = sec_axis(~.*5, name = "Relative humidity [%]"))
ggplot(data = d1, aes(x = Group.1))+
geom_bar(aes(y = x, color = "Average Temp"), position = "dodge", stat = "identity")+
geom_bar(aes(y = y, color = "Average Precipitation"), position = "dodge", stat = "identity")+
scale_y_continuous(sec.axis = sec_axis(~., name = "Relative humidity [%]"))
d2 <- d1[1]
View(d2)
d2 <- d1[1,3]
d2 <- d1[1-3]
View(d2)
d3 <- rbind(d1,d2)
d3<- d1[2-3]
d4 <- rbind(d3,d2)
d3<- d1[1-2]
View(d3)
View(d2)
View(d3)
View(d2)
View(d1)
View(d2)
View(d3)
View(d3)
d3<- d1[0-2]
View(d3)
View(d2)
View(d3)
View(d2)
View(d3)
View(d2)
View(d3)
View(d2)
View(d3)
View(d1)
d3 <- d1[1-2]
View(d3)
d3 <- d1[2]
d3 <- d1[1-2]
d3 <- d1[]
d3 <- d1[1]
d3 <- d1[2]
d3 <- d1[1-2]
d3 <- d1[1:2]
d4 <- rbind(d3,d2)
#make a vector of tree heights in meters
heights <- c(30,41,20,22)
#convert to cm
heights_cm <- heights*100
heights_cm
#look at the first tree height
heights[1]
#look at the 2nd and 3rd tree heights
heights[2:3]
#get more info on the matrix function
help(matrix)
#set up a matrix with 2 columns and fill in by rows
#first argument is the vector of numbers to fill in the matrix
Mat<-matrix(c(1,2,3,4,5,6), ncol=2, byrow=TRUE)
Mat
#set up a matrix that fills in by columns
#first argument is the vector of numbers to fill in the matrix
Mat.bycol<-matrix(c(1,2,3,4,5,6), ncol=2, byrow=FALSE)
Mat.bycol
#subset the matrix to look at row 1, column2
Mat.bycol[1,2]
#look at all values in column 2
Mat.bycol[,2]
#read in weather station file from the data folder
datW <- read.csv("y:\\Students\\hkropp\\a02\\2011124.csv")
#get more information about the dataframe
str(datW)
#Question1
#finds the number of columns and rows within the data
ncol(datW)
nrow(datW)
#specify a column with a proper date format
#note the format here dataframe$column
datW$dateF <- as.Date(datW$DATE, "%Y-%m-%d")
#create a date column by reformatting the date to only include years
#and indicating that it should be treated as numeric data
datW$year <- as.numeric(format(datW$dateF,"%Y"))
#Question 2
#character vector
charvec <- c("Cloud9","Fnatic","TSM","Liquid","Gravity")
#numeric vector
numvec <- c(3.5,999,563.4,0.44,12)
#int vector
intvec <- as.integer(c(1,2,3,4,5))
#factor vector
facvec <- as.factor(charvec)
#find out all unique site names
levels(datW$NAME)
#look at the mean maximum temperature for Aberdeen
mean(datW$TMAX[datW$NAME == "ABERDEEN, WA US"], na.rm=TRUE)
#calculate the average daily temperature
#This temperature will be halfway between the minimum and maximum temperature
datW$TAVE <- datW$TMIN + ((datW$TMAX-datW$TMIN)/2)
#get the mean across all sites
#the by function is a list of one or more variables to index over.
#FUN indicates the function we want to use
#if you want to specify any function specific arguments use a comma and add them after the function
#here we want to use the na.rm arguments specific to
averageTemp <- aggregate(datW$TAVE, by=list(datW$NAME), FUN="mean",na.rm=TRUE)
averageTemp
#change the automatic output of column names to be more meaningful
#note that MAAT is a common abbreviation for Mean Annual Air Temperature
colnames(averageTemp) <- c("NAME","MAAT")
averageTemp
#convert level to number for factor data type
#you will have to reference the level output or look at the row of data to see the character designation.
datW$siteN <- as.numeric(datW$NAME)
#combine graphs
par(mfrow=c(2,2))
hist(datW$TAVE[datW$siteN == 1],
freq=FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Average daily temperature (degrees C)",
ylab="Relative frequency",
col="blue",
border="white")
#add mean line with red (tomato3) color
#and thickness of 3
abline(v = mean(datW$TAVE[datW$siteN == 1],na.rm=TRUE),
col = "tomato3",
lwd = 3)
#add standard deviation line below the mean with red (tomato3) color
#and thickness of 3
abline(v = mean(datW$TAVE[datW$siteN == 1],na.rm=TRUE) - sd(datW$TAVE[datW$siteN == 1],na.rm=TRUE),
col = "tomato3",
lty = 3,
lwd = 3)
#add standard deviation line above the mean with red (tomato3) color
#and thickness of 3
abline(v = mean(datW$TAVE[datW$siteN == 1],na.rm=TRUE) + sd(datW$TAVE[datW$siteN == 1],na.rm=TRUE),
col = "tomato3",
lty = 3,
lwd = 3)
hist(datW$TAVE[datW$siteN == 2],
freq=FALSE,
main = paste(levels(datW$NAME)[2]),
xlab = "Average daily temperature (degrees C)",
ylab="Relative frequency",
col="orange",
border="white")
abline(v = mean(datW$TAVE[datW$siteN == 2],na.rm=TRUE),
col = "tomato3",
lwd = 3)
abline(v = mean(datW$TAVE[datW$siteN == 2],na.rm=TRUE) - sd(datW$TAVE[datW$siteN == 2],na.rm=TRUE),
col = "tomato3",
lty = 3,
lwd = 3)
abline(v = mean(datW$TAVE[datW$siteN == 2],na.rm=TRUE) + sd(datW$TAVE[datW$siteN == 2],na.rm=TRUE),
col = "tomato3",
lty = 3,
lwd = 3)
#Mandan graph
hist(datW$TAVE[datW$siteN == 3],
freq=FALSE,
main = paste(levels(datW$NAME)[3]),
xlab = "Average daily temperature (degrees C)",
ylab="Relative frequency",
col="darkblue",
border="white")
abline(v = mean(datW$TAVE[datW$siteN == 3],na.rm=TRUE),
col = "tomato3",
lwd = 3)
abline(v = mean(datW$TAVE[datW$siteN == 3],na.rm=TRUE) - sd(datW$TAVE[datW$siteN == 3],na.rm=TRUE),
col = "tomato3",
lty = 3,
lwd = 3)
abline(v = mean(datW$TAVE[datW$siteN == 3],na.rm=TRUE) + sd(datW$TAVE[datW$siteN == 3],na.rm=TRUE),
col = "tomato3",
lty = 3,
lwd = 3)
#Mormon Flat Graph
hist(datW$TAVE[datW$siteN == 4],
freq=FALSE,
main = paste(levels(datW$NAME)[4]),
xlab = "Average daily temperature (degrees C)",
ylab="Relative frequency",
col="yellow",
border="white")
abline(v = mean(datW$TAVE[datW$siteN == 4],na.rm=TRUE),
col = "tomato3",
lwd = 3)
abline(v = mean(datW$TAVE[datW$siteN == 4],na.rm=TRUE) - sd(datW$TAVE[datW$siteN == 4],na.rm=TRUE),
col = "tomato3",
lty = 3,
lwd = 3)
abline(v = mean(datW$TAVE[datW$siteN == 4],na.rm=TRUE) + sd(datW$TAVE[datW$siteN == 4],na.rm=TRUE),
col = "tomato3",
lty = 3,
lwd = 3)
#make a histogram for the first site in our levels
#main= is the title name argument.
#Here you want to paste the actual name of the factor not the numeric index
#since that will be more meaningful.
#note I've named the histogram so I can reference it later
h1 <- hist(datW$TAVE[datW$siteN == 1],
freq=FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Average daily temperature (degrees C)",
ylab="Relative frequency",
col="grey50",
border="white")
#the seq function generates a sequence of numbers that we can use to plot the normal across the range of temperature values
x.plot <- seq(-10,30, length.out = 100)
y.plot <-  dnorm(seq(-10,30, length.out = 100),
mean(datW$TAVE[datW$siteN == 1],na.rm=TRUE),
sd(datW$TAVE[datW$siteN == 1],na.rm=TRUE))
#create a density that is scaled to fit in the plot  since the density has a different range from the data density.
#!!! this is helpful for putting multiple things on the same plot
#!!! It might seem confusing at first. It means the maximum value of the plot is always the same between the two datasets on the plot. Here both plots share zero as a minimum.
y.scaled <- (max(h1$density)/max(y.plot)) * y.plot
points(x.plot,
y.scaled,
type = "l",
col = "royalblue3",
lwd = 4,
lty = 2)
#probability distributions
#pnorm(value to evaluate at (note this will evaluate for all values and below),mean, standard deviation)
pnorm(0,
mean(datW$TAVE[datW$siteN == 1],na.rm=TRUE),
sd(datW$TAVE[datW$siteN == 1],na.rm=TRUE))
#pnrom with 5 gives me all probability (area of the curve) below 5
pnorm(5,
mean(datW$TAVE[datW$siteN == 1],na.rm=TRUE),
sd(datW$TAVE[datW$siteN == 1],na.rm=TRUE))
pnorm(5,
mean(datW$TAVE[datW$siteN == 1],na.rm=TRUE),
sd(datW$TAVE[datW$siteN == 1],na.rm=TRUE))- pnorm(0,
mean(datW$TAVE[datW$siteN == 1],na.rm=TRUE),
sd(datW$TAVE[datW$siteN == 1],na.rm=TRUE))
1 - pnorm(20,
mean(datW$TAVE[datW$siteN == 1],na.rm=TRUE),
sd(datW$TAVE[datW$siteN == 1],na.rm=TRUE))
#these two functions are inverses
qnorm(0.95,
mean(datW$TAVE[datW$siteN == 1],na.rm=TRUE),
sd(datW$TAVE[datW$siteN == 1],na.rm=TRUE))
pnorm(18.51026,
mean(datW$TAVE[datW$siteN == 1],na.rm=TRUE),
sd(datW$TAVE[datW$siteN == 1],na.rm=TRUE))
#Question 6
1 - pnorm(18.51026,
mean(datW$TAVE[datW$siteN == 1],na.rm=TRUE) +4 ,
sd(datW$TAVE[datW$siteN == 1],na.rm=TRUE))
par(mfrow = c(1,1))
#Question 7
hist(datW$PRCP[datW$siteN == 1],
freq=FALSE,
main = paste(levels(datW$NAME)[1]),
xlab = "Daily Precipitation",
ylab="Relative frequency",
col="blue",
border="white")
max(datW$PRCP, na.rm = T)
#Question 8
yearlyprc <- c()
years <- max(datW$year, na.rm = T) - min(datW$year, na.rm = T)
for(i in 1:years){
yearlyprc[i]<-sum(datW$PRCP[datW$siteN == 1 & datW$year == i+ min(datW$year, na.rm = T)], na.rm = T)
}
hist(yearlyprc,
freq=FALSE,
main = "Yearly Precipitation Histogram for Aberdeen, WA US",
xlab = "Yearly Precipitation in mm",
ylab ="Relative frequency",
col ="lightblue",
border ="white")
#Question 9
yearlyprc1 <- c()
for(i in 1:years){
yearlyprc1[i]<-sum(datW$PRCP[datW$siteN == 1 & datW$year == i+ min(datW$year, na.rm = T)], na.rm = T)
}
yearlyprc2 <- c()
for(i in 1:years){
yearlyprc2[i]<-sum(datW$PRCP[datW$siteN == 2 & datW$year == i+ min(datW$year, na.rm = T)], na.rm = T)
}
yearlyprc3 <- c()
for(i in 1:years){
yearlyprc3[i]<-sum(datW$PRCP[datW$siteN == 3 & datW$year == i+ min(datW$year, na.rm = T)], na.rm = T)
}
yearlyprc4 <- c()
for(i in 1:years){
yearlyprc4[i]<-sum(datW$PRCP[datW$siteN == 4 & datW$year == i+ min(datW$year, na.rm = T)], na.rm = T)
}
yearlyprc5 <- c()
for(i in 1:years){
yearlyprc5[i]<-sum(datW$PRCP[datW$siteN == 5 & datW$year == i+ min(datW$year, na.rm = T)], na.rm = T)
}
print("The average yearly precipitation for Aberdeen is:")
mean(yearlyprc1)
print("The average yearly precipitation for Livermore is:")
mean(yearlyprc2)
print("The average yearly precipitation for Mandan is:")
mean(yearlyprc3)
print("The average yearly precipitation for Mormon Flat is:")
mean(yearlyprc4)
print("The average yearly precipitation for Morrisville is:")
mean(yearlyprc5)
#
#
# Attempts to graph Q9 with a dual axis bar graph, but ran out of time.
#
# Attempts to graph Q9 with a dual axis bar graph, but ran out of time.
# d1 <- aggregate(datW$TAVE, by = list(datW$NAME), FUN = mean,na.rm = T)
#
# Attempts to graph Q9 with a dual axis bar graph, but ran out of time.
# d1 <- aggregate(datW$TAVE, by = list(datW$NAME), FUN = mean,na.rm = T)
#
#
# Attempts to graph Q9 with a dual axis bar graph, but ran out of time.
# d1 <- aggregate(datW$TAVE, by = list(datW$NAME), FUN = mean,na.rm = T)
#
# d1$y <- c(mean(yearlyprc1),mean(yearlyprc2),mean(yearlyprc3),mean(yearlyprc4),mean(yearlyprc5))
#
# Attempts to graph Q9 with a dual axis bar graph, but ran out of time.
# d1 <- aggregate(datW$TAVE, by = list(datW$NAME), FUN = mean,na.rm = T)
#
# d1$y <- c(mean(yearlyprc1),mean(yearlyprc2),mean(yearlyprc3),mean(yearlyprc4),mean(yearlyprc5))
# d2 <- d1[1-3]
#
# Attempts to graph Q9 with a dual axis bar graph, but ran out of time.
# d1 <- aggregate(datW$TAVE, by = list(datW$NAME), FUN = mean,na.rm = T)
#
# d1$y <- c(mean(yearlyprc1),mean(yearlyprc2),mean(yearlyprc3),mean(yearlyprc4),mean(yearlyprc5))
# d2 <- d1[1-3]
# d3 <- d1[1:2]
#
# Attempts to graph Q9 with a dual axis bar graph, but ran out of time.
# d1 <- aggregate(datW$TAVE, by = list(datW$NAME), FUN = mean,na.rm = T)
#
# d1$y <- c(mean(yearlyprc1),mean(yearlyprc2),mean(yearlyprc3),mean(yearlyprc4),mean(yearlyprc5))
# d2 <- d1[1-3]
# d3 <- d1[1:2]
# d3$x <-
#
# Attempts to graph Q9 with a dual axis bar graph, but ran out of time.
# d1 <- aggregate(datW$TAVE, by = list(datW$NAME), FUN = mean,na.rm = T)
#
# d1$y <- c(mean(yearlyprc1),mean(yearlyprc2),mean(yearlyprc3),mean(yearlyprc4),mean(yearlyprc5))
# d2 <- d1[1-3]
# d3 <- d1[1:2]
# d3$x <-
#
#
# Attempts to graph Q9 with a dual axis bar graph, but ran out of time.
# d1 <- aggregate(datW$TAVE, by = list(datW$NAME), FUN = mean,na.rm = T)
#
# d1$y <- c(mean(yearlyprc1),mean(yearlyprc2),mean(yearlyprc3),mean(yearlyprc4),mean(yearlyprc5))
# d2 <- d1[1-3]
# d3 <- d1[1:2]
# d3$x <-
#
# d4 <- rbind(d3,d2)
# Attempts to graph Q9 with a dual axis bar graph, but ran out of time.
# d1 <- aggregate(datW$TAVE, by = list(datW$NAME), FUN = mean,na.rm = T)
#
# d1$y <- c(mean(yearlyprc1),mean(yearlyprc2),mean(yearlyprc3),mean(yearlyprc4),mean(yearlyprc5))
# d2 <- d1[1-3]
# d3 <- d1[1:2]
# d3$x <-
#
# d4 <- rbind(d3,d2)
#
# d1 <- aggregate(datW$TAVE, by = list(datW$NAME), FUN = mean,na.rm = T)
#
# d1$y <- c(mean(yearlyprc1),mean(yearlyprc2),mean(yearlyprc3),mean(yearlyprc4),mean(yearlyprc5))
# d2 <- d1[1-3]
# d3 <- d1[1:2]
# d3$x <-
#
# d4 <- rbind(d3,d2)
#
# ggplot(data = d1, aes(x = Group.1))+
#
# d1$y <- c(mean(yearlyprc1),mean(yearlyprc2),mean(yearlyprc3),mean(yearlyprc4),mean(yearlyprc5))
# d2 <- d1[1-3]
# d3 <- d1[1:2]
# d3$x <-
#
# d4 <- rbind(d3,d2)
#
# ggplot(data = d1, aes(x = Group.1))+
#    geom_bar(aes(y = x, color = "Average Temp"), position = "dodge", stat = "identity")+
# d1$y <- c(mean(yearlyprc1),mean(yearlyprc2),mean(yearlyprc3),mean(yearlyprc4),mean(yearlyprc5))
# d2 <- d1[1-3]
# d3 <- d1[1:2]
# d3$x <-
#
# d4 <- rbind(d3,d2)
#
# ggplot(data = d1, aes(x = Group.1))+
#    geom_bar(aes(y = x, color = "Average Temp"), position = "dodge", stat = "identity")+
#    geom_bar(aes(y = y, color = "Average Precipitation"), position = "dodge", stat = "identity")+
# d2 <- d1[1-3]
# d3 <- d1[1:2]
# d3$x <-
#
# d4 <- rbind(d3,d2)
#
# ggplot(data = d1, aes(x = Group.1))+
#    geom_bar(aes(y = x, color = "Average Temp"), position = "dodge", stat = "identity")+
#    geom_bar(aes(y = y, color = "Average Precipitation"), position = "dodge", stat = "identity")+
#    scale_y_continuous(sec.axis = sec_axis(~., name = "Relative humidity [%]"))
# d3 <- d1[1:2]
# d3$x <-
#
# d4 <- rbind(d3,d2)
#
# ggplot(data = d1, aes(x = Group.1))+
#    geom_bar(aes(y = x, color = "Average Temp"), position = "dodge", stat = "identity")+
#    geom_bar(aes(y = y, color = "Average Precipitation"), position = "dodge", stat = "identity")+
#    scale_y_continuous(sec.axis = sec_axis(~., name = "Relative humidity [%]"))
#
# d3 <- d1[1:2]
# d3$x <-
#
# d4 <- rbind(d3,d2)
#
# ggplot(data = d1, aes(x = Group.1))+
#    geom_bar(aes(y = x, color = "Average Temp"), position = "dodge", stat = "identity")+
#    geom_bar(aes(y = y, color = "Average Precipitation"), position = "dodge", stat = "identity")+
#    scale_y_continuous(sec.axis = sec_axis(~., name = "Relative humidity [%]"))
#
# d3 <- d1[1:2]
# d3$x <-
#
# d4 <- rbind(d3,d2)
#
# ggplot(data = d1, aes(x = Group.1))+
#    geom_bar(aes(y = x, color = "Average Temp"), position = "dodge", stat = "identity")+
#    geom_bar(aes(y = y, color = "Average Precipitation"), position = "dodge", stat = "identity")+
#    scale_y_continuous(sec.axis = sec_axis(~., name = "Relative humidity [%]"))
#
# d3 <- d1[1:2]
# d3$x <-
#
# d4 <- rbind(d3,d2)
#
# ggplot(data = d1, aes(x = Group.1))+
#    geom_bar(aes(y = x, color = "Average Temp"), position = "dodge", stat = "identity")+
#    geom_bar(aes(y = y, color = "Average Precipitation"), position = "dodge", stat = "identity")+
#    scale_y_continuous(sec.axis = sec_axis(~., name = "Relative humidity [%]"))
#
# d3 <- d1[1:2]
# d3$x <-
#
# d4 <- rbind(d3,d2)
#
# ggplot(data = d1, aes(x = Group.1))+
#    geom_bar(aes(y = x, color = "Average Temp"), position = "dodge", stat = "identity")+
#    geom_bar(aes(y = y, color = "Average Precipitation"), position = "dodge", stat = "identity")+
#    scale_y_continuous(sec.axis = sec_axis(~., name = "Relative humidity [%]"))
#
# d3 <- d1[1:2]
# d3$x <-
#
# d4 <- rbind(d3,d2)
#
# ggplot(data = d1, aes(x = Group.1))+
#    geom_bar(aes(y = x, color = "Average Temp"), position = "dodge", stat = "identity")+
#    geom_bar(aes(y = y, color = "Average Precipitation"), position = "dodge", stat = "identity")+
#    scale_y_continuous(sec.axis = sec_axis(~., name = "Relative humidity [%]"))
#
# d3 <- d1[1:2]
# d3$x <-
#
# d4 <- rbind(d3,d2)
#
# ggplot(data = d1, aes(x = Group.1))+
#    geom_bar(aes(y = x, color = "Average Temp"), position = "dodge", stat = "identity")+
#    geom_bar(aes(y = y, color = "Average Precipitation"), position = "dodge", stat = "identity")+
#    scale_y_continuous(sec.axis = sec_axis(~., name = "Relative humidity [%]"))
#
# d3 <- d1[1:2]
# d3$x <-
#
# d4 <- rbind(d3,d2)
#
# ggplot(data = d1, aes(x = Group.1))+
#    geom_bar(aes(y = x, color = "Average Temp"), position = "dodge", stat = "identity")+
#    geom_bar(aes(y = y, color = "Average Precipitation"), position = "dodge", stat = "identity")+
#    scale_y_continuous(sec.axis = sec_axis(~., name = "Relative humidity [%]"))
#
# d3 <- d1[1:2]
# d3$x <-
#
# d4 <- rbind(d3,d2)
#
# ggplot(data = d1, aes(x = Group.1))+
#    geom_bar(aes(y = x, color = "Average Temp"), position = "dodge", stat = "identity")+
#    geom_bar(aes(y = y, color = "Average Precipitation"), position = "dodge", stat = "identity")+
#    scale_y_continuous(sec.axis = sec_axis(~., name = "Relative humidity [%]"))
#
# d3 <- d1[1:2]
# d3$x <-
#
# d4 <- rbind(d3,d2)
#
# ggplot(data = d1, aes(x = Group.1))+
#    geom_bar(aes(y = x, color = "Average Temp"), position = "dodge", stat = "identity")+
#    geom_bar(aes(y = y, color = "Average Precipitation"), position = "dodge", stat = "identity")+
#    scale_y_continuous(sec.axis = sec_axis(~., name = "Relative humidity [%]"))
#
